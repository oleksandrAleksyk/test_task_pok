{"version":3,"sources":["common/enums/stat-enum.ts","components/header/Header.tsx","common/store/store.ts","components/list/card-component/Card.tsx","components/list/List.tsx","components/selected-card/SelectedCard.tsx","components/main-area/MainArea.tsx","App.tsx","index.tsx"],"names":["StatsOrder","Header","className","onClick","window","location","reload","pokemonNameList","pokemonObjectsList","sortedList","offset","reloadPage","selectedCardObject","pokemonTypes","showSelected","makeAutoObservable","this","loadData","value","console","log","filter","item","id","fetch","then","res","json","r","length","results","loadPokemonData","forEach","url","push","attack","returnStat","stats","ATTACK","defence","DEFENCE","hp","HP","name","specialAttack","SPECIAL_ATTACK","specialDefence","SPECIAL_DEFENCE","speed","SPEED","totalMoves","moves","types","returnObjectTypes","weight","allTypes","map","Object","values","Set","flat","type","some","a","array","obj","base_stat","Card","props","store","setSelectedCard","src","alt","index","observer","sortedTypes","sortPokemonObjects","setOffset","MainArea","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b62a85b.chunk.js","sourcesContent":["export enum StatsOrder {\r\n    HP = 0,\r\n    ATTACK=1,\r\n    DEFENCE=2,\r\n    SPECIAL_ATTACK = 3,\r\n    SPECIAL_DEFENCE=4,\r\n    SPEED=5\r\n}\r\n","import './Header.scss';\r\nexport const Header = ()=>(\r\n    <header className={'header'}>\r\n        <h1 onClick={()=>{window.location.reload()}}>PokeDex</h1>\r\n    </header>\r\n)\r\n","import {makeAutoObservable} from \"mobx\";\r\nimport {PokemonInterface, PokemonObjectInterface} from \"../interfaces/pokemon-interface\";\r\nimport {StatsOrder} from \"../enums/stat-enum\";\r\n\r\nclass Store {\r\n    pokemonNameList: Array<object> = [];\r\n    pokemonObjectsList: Array<PokemonInterface> = [];\r\n    sortedList: Array<PokemonInterface> = [];\r\n    offset: number = 0;\r\n    reloadPage: boolean = false;\r\n    selectedCardObject: Array<PokemonInterface> = [];\r\n    pokemonTypes : Array<any> = [];\r\n    showSelected : boolean = false;\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n        this.loadData();\r\n        this.sortedList = this.pokemonObjectsList;\r\n    }\r\n\r\n    setOffset(){\r\n        this.offset++;\r\n        this.loadData();\r\n    }\r\n    setSelectedCard(value:number){\r\n        console.log(value);\r\n        this.selectedCardObject = this.pokemonObjectsList.filter((item)=>{\r\n            return item.id === value;\r\n        })\r\n        this.showSelected=true;\r\n    }\r\n    loadData():void {\r\n            fetch(`https://pokeapi.co/api/v2/pokemon/?limit=12&offset=${this.offset*12}`)\r\n                .then((res) => {\r\n                    res.json()\r\n                        .then((r) => {\r\n                            this.pokemonNameList.length = 0;\r\n                            this.pokemonObjectsList.length = 0;\r\n                            this.pokemonTypes.length = 0;\r\n                            this.pokemonNameList = r.results;\r\n                        })\r\n                        .then(()=>{\r\n                            this.loadPokemonData();\r\n                            this.sortedList = this.pokemonObjectsList;\r\n                        })\r\n                })\r\n    }\r\n    loadPokemonData():void{\r\n        this.pokemonNameList.forEach((item: any)=>{\r\n                fetch(item.url)\r\n                    .then((res)=>{res.json()\r\n                        .then((r:PokemonObjectInterface)=>{\r\n                            this.pokemonObjectsList.push({\r\n                                attack: this.returnStat(r.stats[StatsOrder.ATTACK]),\r\n                                defence: this.returnStat(r.stats[StatsOrder.DEFENCE]),\r\n                                hp: this.returnStat(r.stats[StatsOrder.HP]),\r\n                                id: r.id,\r\n                                name:r.name,\r\n                                specialAttack: this.returnStat(r.stats[StatsOrder.SPECIAL_ATTACK]),\r\n                                specialDefence: this.returnStat(r.stats[StatsOrder.SPECIAL_DEFENCE]),\r\n                                speed: this.returnStat(r.stats[StatsOrder.SPEED]),\r\n                                totalMoves: r.moves.length,\r\n                                types: this.returnObjectTypes(r.types),\r\n                                weight: r.weight,\r\n                            })\r\n                            this.pokemonTypes.push(this.returnObjectTypes(r.types));\r\n                        })})\r\n        })\r\n    }\r\n    get sortedTypes(){\r\n        const allTypes = this.pokemonTypes.map((item)=>{\r\n            return Object.values(item);\r\n        })\r\n        return ([...new Set(allTypes.flat(2))]);\r\n    }\r\n    sortPokemonObjects(type:any){\r\n        this.sortedList = this.pokemonObjectsList.filter((item)=>{\r\n            return item.types.some((a)=>{return a===type})\r\n        })\r\n    }\r\n    returnObjectTypes(array:object[]){\r\n        return array.map((item:any)=>{\r\n            return item.type.name;\r\n        });\r\n    }\r\n    returnStat(obj:any){\r\n        return obj.base_stat\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default new Store();\r\n","import './Card.scss';\r\nimport store from '../../../common/store/store';\r\nexport const Card = (props: any) => {\r\n    return (\r\n\r\n            <div className={'card'} key={props.id} onClick={()=>{store.setSelectedCard(props.id)}}>\r\n                <h1 className={'card-headline '}>{props.name}</h1>\r\n                <img src={`https://pokeres.bastionbot.org/images/pokemon/${props.id}.png`} alt={props.name}/>\r\n                <div className={'card-types'}>\r\n                    {props.types.map((item: any,index:any) => (<p className={item} key={index} >{item}</p>))}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n","import store from '../../common/store/store';\r\nimport {observer} from \"mobx-react\";\r\nimport {Card} from \"./card-component/Card\";\r\nimport './List.scss';\r\n\r\nconst List = ()=>{\r\n    let {sortedList} = store;\r\n    let {sortedTypes} = store;\r\n    return (\r\n        <>\r\n            <div className={'list'}>\r\n                <div className={\"list-types\"}>\r\n                {\r\n                    sortedTypes.map((item:any, index:any)=>{\r\n                        return <p\r\n                            key={index}\r\n                            onClick={()=>{store.sortPokemonObjects(item)}}\r\n                        >{item}</p>\r\n                    })\r\n                }\r\n                </div>\r\n                {\r\n                    sortedList.map((item) => {\r\n                        return <Card\r\n                            key={item.id}\r\n                            name={item.name}\r\n                            id={item.id}\r\n                            types={item.types}\r\n                            hp={item.hp}\r\n                            attack={item.attack}\r\n                            defence={item.defence}\r\n                            specialAttack={item.specialAttack}\r\n                            specialDefence={item.specialDefence}\r\n                            speed={item.speed}\r\n                            weight={item.weight}\r\n                        />\r\n                    })\r\n                }\r\n                <button onClick={()=>{store.setOffset()}}>Load More</button>\r\n            </div>\r\n        </>\r\n       )\r\n}\r\nexport default observer(List)\r\n","import './SelectedCard.scss';\r\nimport store from '../../common/store/store';\r\nimport {observer} from 'mobx-react';\r\nconst SelectedCard = (props: any) => {\r\n   let {showSelected} = store;\r\n   let {selectedCardObject}=store;\r\n   return (\r\n       <div className={'selected-area'}>\r\n           {showSelected?\r\n                   <div className={'selected-card'}>\r\n                       <h1 className={'selected-card-headline'}>{selectedCardObject[0].name}</h1>\r\n                       <img src={`https://pokeres.bastionbot.org/images/pokemon/${selectedCardObject[0].id}.png`}\r\n                            alt={selectedCardObject[0].name}/>\r\n                       <div className={'selected-card-types'}>\r\n                           {selectedCardObject[0].types.map((item: any, index: any) => (\r\n                               <p className={item} key={index}>{item}</p>))}\r\n                       </div>\r\n                       <table>\r\n                           <thead>\r\n                               <tr>\r\n                                   <th>Ability</th>\r\n                                   <th>Base Stat</th>\r\n                               </tr>\r\n                           </thead>\r\n                           <tbody>\r\n                            <tr>\r\n                                <td>HP</td>\r\n                                <td>{selectedCardObject[0].hp}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Attack</td>\r\n                                <td>{selectedCardObject[0].attack}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Defence</td>\r\n                                <td>{selectedCardObject[0].defence}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Special Attack</td>\r\n                                <td>{selectedCardObject[0].specialAttack}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Special Defence</td>\r\n                                <td>{selectedCardObject[0].specialDefence}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Speed</td>\r\n                                <td>{selectedCardObject[0].speed}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Weight</td>\r\n                                <td>{selectedCardObject[0].weight}</td>\r\n                            </tr>\r\n                           </tbody>\r\n                       </table>\r\n                   </div>\r\n\r\n               :\r\n               <div></div>\r\n       }\r\n       </div>\r\n\r\n   )\r\n}\r\nexport default observer(SelectedCard)\r\n","import List from \"../list/List\";\r\nimport SelectedCard from \"../selected-card/SelectedCard\";\r\nimport './MainArea.scss';\r\nexport const MainArea = ()=>{\r\n\r\n    return(\r\n        <div className={'main-area'}>\r\n            <List />\r\n            <SelectedCard />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport {Header} from \"./components/header/Header\";\nimport {MainArea} from \"./components/main-area/MainArea\";\n//importing style\nimport './common/styles/default-styles.scss';\n\nconst App = () => (\n    <>\n        <Header/>\n        <MainArea />\n    </>\n)\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}